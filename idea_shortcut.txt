	Ctrl  +  E                        最近打开文件列表
	Ctrl  +  G                        跳转到某一行
	Ctrl  +  D                        比较两个目录   复制一行
	Ctrl  +  K                        提交更改
	Shift +  F9                       调试Debug
	Alt   +  1                        显示项目
	Alt   +  Q                        当前方法上下文信息描述
	Alt   +  ↑↓                       方法之间的快捷移动
	Alt   +  Enter                    *
	Alt   +  Shift + C                查看最近修改
	Alt   +  Insert                   set/get快速实现
	Alt   +  Shift + F10              运行/调试
	Ctrl  +  Tab                      切换
	Ctrl  +  X                        删除一行
	Ctrl  +  Alt + B                  实现方法
	Ctrl  +  Alt + Shift + N          找方法|属性
	Ctrl  +  Alt + Shift + T          重构列表
	Ctrl  +  I                        实现方法编写
	Ctrl  +  Shift + ↑↓               移动选中代码
	Ctrl  +  Space                    联想功能
	Ctrl  +  Alt   + F7               查看用到当前所选方法,类,属性的位置      ***
	Ctrl  +  Shift + F7 			  查看所有状态类似的语句                  ***
	Ctrl  +  Shift + A                快速查找工具栏下功能
	Ctrl  +  Shift + Enter            代码结构补齐
	
	
	未来可能会常用的功能预留
	右键 local history 可查看历史 也可给当前版本添加标签便于查找
	
	
	
	If the cursor is between the parentheses of a method call, 
	pressing Ctrl+P brings up a list of valid parameters.
	-如果光标在方法调用的括号中，Ctrl+P 带出有效参数列表
	
	Ctrl+Shift+Backspace (Navigate | Last Edit Location) brings you back to the last place
	where you made changes in the code.
	-Ctrl+Shift+Backspace带你回到最近修改代码的位置
	Pressing Ctrl+Shift+Backspace a few times moves you deeper into your changes history
	-按住Ctrl+Shift+Backspace一段时间带你进入更改历史

	To see your local history of changes in a file, invoke Local History | Show History from the context menu.
	-在快捷菜单调用Local History或者Show History可以看到对文件修改的本地历史
	You can navigate through different file versions, 
	-你可以浏览不同版本的文件
	see the differences and roll back to any previous version.
	-查看不同并且回滚到任何过去的版本
	Use the same context menu item to see the history of changes on a directory. 
	-使用相同的快捷菜单项目查看同一目录的修改历史
	You will never lose any code with this feature!
	-通过这一特性你将再也不会丢失任何代码
	
	Press Alt+Q (View | Context Info) to see the declaration of the current method 
	without the need to scroll to it.
	-按Alt+Q(视图|上下文信息)可以看到当前方法的声明并且不需要滚动
	
	Use F2/Shift+F2 keys to jump between highlighted syntax errors.
	-使用F2/Shift+F2实现高亮语法错误的跳转
	Use Ctrl+Alt+向上箭头/Ctrl+Alt+向下箭头 shortcuts to jump between compiler error messages or search operation results.
	-使用Ctrl+Alt+向上箭头/Ctrl+Alt+向下箭头实现编译错误信息和搜索操作结果的跳转
	To skip warnings right click on the validation side bar / marker bar and choose Go to high priority problems only.
	
	Use Ctrl+J to complete any valid Live Template abbreviation if you don't remember it. 
	-使用Ctrl+J完成任何有效现场模板缩写如果你不记得它
	For example, type it and press Ctrl+J to see what happens.
	
	To show separator lines between methods in the editor, 
	-为了在编辑器中显示方法之间的分割线
	open the editor settings and select the Show method separators check box in the Appearance page.
	-在设置外表页中选中show method选择框
	
	When using basic code completion (Ctrl+空格), type any characters that exist anywhere in an identifier.
	-当使用基本代码完成(Ctrl +空格),输入任何一个存在于标识符的字符即可。
	
	Use Alt+向上箭头 and Alt+向下箭头 keys to quickly move between methods in the editor.
	-使用Alt+向上箭头|向下箭头 来进行方法之间的快捷移动
	
	Ctrl+Shift+J shortcut joins two lines into one and removes unnecessary space to match your code style.
	-Ctrl+Shift+J 两行变一行并移除不必要的空间来适应你的代码
	
	Use Refactor | Copy to create a class which is a copy of the selected class. 
	-使用Refactor | Copy来创建一个被选择类的副本
	This can be useful, for example, 
	when you need to create a class which has much in common with some existing class 
	-当你需要创建一个与现存的类有很多相同之处的类时
	and it's not feasible to put the shared functionality in a common superclass.
	-并且在同一父类中放入共享功能是不可行的
	
	Right-clicking on a breakpoint marker (on the bar to the left from the text) 
	-右击断点标记（从文本左边的栏）
	invokes the speedmenu where you can quickly enable/disable the breakpoint or adjust its properties.
	-调用可以快速启用/禁用断点或者调试其功能的speedmenu
	
	To easily evaluate the value of any expression while debugging the program, 
	-在调试程序时，要方便地评估任何表达式的值
	select its text in the editor (you may press a Ctrl+W a few times to efficiently perform this operation) and press Alt+F8.
	-请在编辑器中选择其文本（您可以按Ctrl + W几次，以有效地执行此操作）,并按Alt + F8
	
	To quickly evaluate the value of any expression while debugging the program, 
	-当调试bug时,为了快速评估任何表达式的值
	hold Alt and click this expression to see its value and calculate it, call a method, etc.
	-按住Alt点击表达式来查看它计算后返回来的值
	
	Use Basic Completion (Ctrl+空格) for completing words in text and comments in files of many different types.
	-使用(Ctrl+空格)来补全单词和在不同类型的文件下评论
	All the words from the current file that start with the typed prefix will appear in the lookup list.
	-在类型化前缀开始的当前文件中,所有单词将出现在“查找”列表中
	
	The shortcuts such as Ctrl+Q (View | Quick Documentation), Ctrl+P (View | Parameter Info), 
	-快捷键Ctrl+Q(视图|快速查找文件),Ctrl+P(视图|参数信息)
	Ctrl+B (Navigate | Declaration) and others can be used not only in the editor
	-Ctrl+B(导航|介绍)和其他都不仅可用于编辑器
	but in the code completion popup list as well.
	-也可以在弹出框列表下用于代码的自动补全
	
	When using Code Completion, you can accept the currently highlighted selection in the popup list with the period character (.), 
	-使用代码补全时,你可以在弹出列表中接受当前高亮显示的选择,通过句号
	comma (,), semicolon (;), space and other characters.
	-逗号,分号,空格和其他字符.
	The selected name is automatically entered in the editor followed by the entered character.
	-在编辑器输入字符的后面自动输入选定的名称
	
	To help you learn the purpose of each item in the main menu,
	-为了帮助您了解主菜单中每个项的用途
	its short description is shown in the status bar at the bottom of the application frame
	-它简要说明将显示在应用程序框架底部的状态栏中
	when you position the mouse pointer over this item.
	-当你把鼠标指针置于该项时
	
	To open any particular method or field in the editor quickly, 
	-为了快速在编辑器中打开一个方法或者属性
	press Ctrl+Alt+Shift+N (Navigate | Symbol) and start typing its name.
	-按Ctrl+Alt+Shift+N (导航|符号)然后键入它的名字
	Choose symbol from the drop-down list that appears.
	-从下拉列表中选择你需要的
	
	Use Alt+Shift+C to quickly review your recent changes to the project.
	-使用Alt+Shift+C来快速回顾你最近对项目的修改
	
	You can start referring to an Ant property or target even if it is not defined yet. 
	-你可以引用Ant的属性或目标,即使它尚未定义
	An intention action feature will suggest you to automatically create the necessary tag,
	-意向操作功能建议你自动创建必要的标签
	without the need for you to leave your current editing location.
	-而不需要你离开当前的编辑位置
	
	Use Ctrl+Shift+Enter to complete a current statement such as if, do-while, try-catch, return (or a method call) 
	-使用Ctrl+Shift+Enter完成当前陈述就像if, do-while, try-catch, return 或者方法调用
	into a syntactically correct construct 
	-为了正确的构建语法
	
	When in the Go to Class, Go to Symbol, or Go to File popup, 
	-在查找类，符号或者文件时
	you can ease the search by filtering the lookup list with the help of the "camel words" prefixes.
	-你可以用"驼峰单词"的前缀来轻松的进行筛选
	
	Use Ctrl+Shift+I (View | Quick Definition), to quickly review definition or content of the symbol at caret,
	-使用Ctrl+Shift+I(视图|快速释义)来在caret中快速检查定义和符号的内容
	without the need to open it in a new editor tab.
	-不需要在新的编辑器选项卡中打开它
	
	You can use Basic Completion (Ctrl+空格) in HTML, CSS and JavaScript files, 
	-你可以在HTML, CSS and JavaScript文件中红使用Ctrl+空格
	for completing attributes, parameters, tags, selectors, etc.
	-来补全属性、参数、标签、选择器等
	
	
	By pressing Alt+Shift+F10 you can access the Run/Debug dropdown on the main toolbar, without the need to use your mouse.
	-Alt+Shift+F10可以进入主工具栏下的运行/调试下拉列表,不需要动用你的鼠标
	
	If you notice that IntelliJ IDEA works slowly, consider the possibility to reduce the number of folders under antivirus protection.
	-如果你注意到IDEA工作缓慢,考虑在防病毒保护下减少文件夹数量的可能性
	Each antivirus check in your project consumes resources. 
	-项目中的每一项防病毒检查都消耗资源
	You can significantly improve the performance, if you exclude certain folders from the antivirus protection.
	-如果排除某些文件夹的防病毒检查,你能有效的提高性能
	
	You can quickly open a Maven project by selecting a pom.xml file in the File | Open dialog. 
	-你能够快速打开一个Maven项目通过选择pom.xml文件或者打开对话框
	The corresponding Maven project is imported with default settings, without launching the wizard.
	-相应的Maven项目默认设置进口,没有启动向导
	
	If you don't want to commit some of your changes to the repository,
	-如果你不想提交更改到库中
	you can set them aside for a while, by moving to a separate changelist,
	-你可以把它们先放到一边,通过移动到一个单独的变更
	or by putting them to a shelf. Select such file in the Local tab of the Changes tool window, 
	-或者把它们放到一个架子上.在选择工具窗口中的局部变化表等文件
	and on the context menu choose Move to Another Changelist, or Shelve Changes
	-并在上下文菜单中选择“移动到另一个更新，或搁置的变化

	
	You can quickly open an Eclipse project by selecting a .classpath or .project file in the File | Open dialog. 
	-你可以快速打开一个Eclipse项目通过在文件|打开对话框中选择一个.classpath 或 .project文件
	The corresponding Eclipse project is imported with default settings, without launching the wizard.
	-相对应的Eclipse项目与默认设置被导入并且不需要启动向导
	
	You can bring forward the list of all usages of a class, method or variable across the whole project, and quickly jump to the selected usage.
	-你能够提交整个项目中类,方法,变量的所用使用方法并且快速跳转到选定的用法
	To do that, place the caret at the symbol's name or at its usage in code and press Ctrl+Alt+F7 (Edit | Find | Show Usages in the main menu), scroll the list and click the desired usage.
	-如果想要做到这样的话,在代码中将caret放到符号的名字或它的用法上,按Ctrl+Alt+F7(编辑|查找|显示用法在主菜单),滑动列表选择你需要的用法
	
	
	To quickly find a menu command or toolbar action, you do not need to look through the menus.
	-为了快速查看菜单命令或者工具操作,不必要浏览菜单
	Just press Ctrl+Shift+A (Help | Find Action on the main menu) and start typing the name of the action. 
	-只需要按下Ctrl+Shift+A(帮助|查找操作在主菜单)并输入操作名称
	Choose the desired action from the suggestion list.
	-在推荐列表中选择你需要的操作
	
	
	To quickly find and run an inspection, press Ctrl+Alt+Shift+I and start typing the name of the inspection or its group.
	-要快速查找和运行检查,按下Ctrl+Alt+Shift+I并键入检查或其组的名称
	Choose the desired inspection from the suggestion list and then specify the desired scope.
	-从列表中选择所需的检查,然后选定所需的范围
	
	You can quickly find a setting you need in the Settings/Preferences dialog, without browsing through the numerous options. 
	-你能够快速查找你需要的设置在设置/偏好对话框中,而不需要浏览众多选项
	Just type some characters that, in your opinion, exist in the option description, and the list of settings will reduce to the matching ones.
	-只需键入一些字符,在你看来,在选项中有了这些描述,会减少在列表中匹配到的设置
	Select the desired entry, and see the setting that contains the entered characters highlighted:
	-选择需要条目,看一下设置中是否包含键入的字符
	
	You can create code constructs using statement completion. Start typing a method declaration or a statement,
	-你能够使用语句完成来创建代码结构.开始键入一个方法声明或陈述,
	and press Ctrl+Shift+Enter after the opening parenthesis. The braces are created, with the caret placed inside:
	-在右括号后按下Ctrl+Shift+Enter,光标插入里面后大括号就生成了
	
	You can view all methods of the implemented interfaces in a class, 
	-你可以在一个类中查看所有实现了其他接口的方法
	if you place the caret at the implements keyword in the class declaration,
	-在类描述中将光标插入实现的关键字
	press Ctrl+Shift+F7, and select the desired interface from the list:
	-按下Ctrl+Shift+F7并在列表中选择你需要的接口
	
	To view all exit points of a method, place the caret at one of them, e.g. the return statement, and press Ctrl+Shift+F7
	-要查看方法的所有退出点，请将插入符号放在其中一个，例如 返回语句，然后按Ctrl + Shift + F7
	
	You can view all statements within the method where certain exceptions can be caught.
	-你能够查看方法中可以捕获某些异常的所有语句
	Just place the caret at the throws keyword in a method declaration, press Ctrl+Shift+F7 and select the desired exception class from the list. 
	-只需要在方法声明中将插入符号放在throws关键字上,按下Ctrl+Shift+F7,然后在列表中选择需要的异常类
	This will also work for try and catch.
	-这也可以用于try和catch语句
	When you press Alt+Enter to invoke a quick fix or intention action, press the right arrow key to reveal the list of additional options.
	-当你按下Alt+Enter来调用快速修复或意图动作,按右箭头来显示额外的选项列表
	Depending on the context, you can choose to disable inspection, fix all problems, change inspection profile, etc.
	-依靠上下文,你可以选择禁用检查,修复问题或修改检查配置
	
	IntelliJ IDEA helps create test cases directly from class declaration. 
	-IntelliJ IDEA可以直接从类声明创建测试用例
	With the caret at the class name in the editor, press Alt+Enter, and choose Create Test from the suggestion list:
	- 使用编辑器中的类名称,按Alt + Enter,然后从建议列表中选择创建测试
	
	You can easily open an external file for editing, if you just drag it from the Explorer or Finder to the editor.
	-你可以通过从资源管理器或者Finder下拖拽一个外部文件到编辑器下进行编辑
	
	Version control annotations show the latest changes of each line in one click.
	-版本控制注释在一次点击中显示每一行的最新更改
	Just right-click an annotation and use the Show Diff command in the context menu.
	-右击注释,然后再上下文菜单中使用"显示差异"命令
	
	To compare two directories, select one or both of them in the Project view and press Ctrl+D.
	-要比较两个目录,请在"项目"视图中选择一个或两个目录,然后按Ctrl+D
	
	If a method signature has been changed,
	-如果方法签名已更改
	IntelliJ IDEA highlights the tags that ran out of sync with the documentation comment and suggests a quick fix:
	-IDEA将突出显示与文档注释不同步的标记,并建议快速修复
	
	
	You can drag an external file from the Explorer or Finder, and drop it onto the Favorites tool window.
	-您可以从资源管理器或Finder拖动外部文件,并将其放在收藏夹工具窗口上
	
	Enable the horizontal scrolling with the mouse wheel by holding the Shift key.
	-按住Shift键启用鼠标滚轮的水平滚动
	
	Postfix code completion is applied "from right to left" and lets you avoid backward caret jumps when coding. 
	-后缀代码完成从从右到左应用,并允许您在编码时避免向后插入符号跳转
	After the code fragment that you want to change, type a dot (.)
	-在要更改的代码片段之后,键入点（.）
	optionally press Ctrl+J and select the desired option.
	-可选择按Ctrl + J并选择所需的选项
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	